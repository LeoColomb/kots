name: 'Build a custom melange package'
description: 'Composite action for building a custom melange package'
inputs:
  context:
    description: 'Path to the context directory'
    required: true

  component:
    description: 'Name of the component (e.g. kotsadm, kurl-proxy, etc...)'
    required: true

  git-tag:
    description: 'Git tag'
    required: true

  arch:
    description: 'Architecture to build for'
    required: true

runs:
  using: "composite"
  steps:
    - name: configure packages for arm64
      if: inputs.arch == 'arm64'
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y curl jq gettext-base pkg-config

    # download schemahero binary for kotsadm-migrations for the specified arch

    - if: inputs.component == 'kotsadm-migrations'
      uses: falti/dotenv-action@v1
      id: dotenv
      with:
        path: .image.env

    - if: inputs.component == 'kotsadm-migrations'
      uses: imjasonh/setup-crane@v0.3

    - if: inputs.component == 'kotsadm-migrations'
      shell: bash
      run: |
        crane export schemahero/schemahero:${{ steps.dotenv.outputs.SCHEMAHERO_TAG }} --platform linux/${{ inputs.arch }} - | tar -Oxf - schemahero > migrations/schemahero
        chmod +x migrations/schemahero

    # build and install the melange binary.

    - uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: install latest melange binary
      shell: bash
      run: |
        go install chainguard.dev/melange@latest

    # build the melange package

    - name: template melange config
      shell: bash
      run: |
        export GIT_TAG=${{ inputs.git-tag }}
        envsubst '${GIT_TAG}' < ${{ inputs.context }}/melange.yaml.tmpl > ${{ inputs.context }}/melange.yaml

    - name: build melange package
      shell: bash
      run: |
        mkdir -p build
        melange keygen melange.rsa
        melange build ${{ inputs.context }}/melange.yaml --arch ${{ inputs.arch }}

    # upload artifacts generated by the melange build so they can later be used by apko

    - name: rename melange.rsa.pub
      shell: bash
      run: mv melange.rsa.pub melange-${{ inputs.arch }}.rsa.pub

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.component }}-melange-packages-${{ inputs.arch }}
        path: ./packages

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.component }}-melange-rsa-pub-${{ inputs.arch }}
        path: ./melange-${{ inputs.arch }}.rsa.pub
